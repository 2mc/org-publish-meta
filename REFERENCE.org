
* TODO Variables
:PROPERTIES:
:DATE:     <2013-12-18 Wed 11:52>
:END:

** org-pm-project-files

** org-pm-auto-parse

** org-pm-auto-copy

** org-pm-project-data-file-path

** org-pm-default-project-name

** org-pm-default-project-org-folder

** org-pm-default-project-html-folder


* TODO Main functions and commands
:PROPERTIES:
:DATE:     <2013-12-18 Wed 11:16>
:END:

** org-pm-add-file-to-project:

** org-pm-remove-file-from-project:

** org-pm-parse-buffer: 

This command parses the current  in order to do 3 things: 

1. Create project definitions. (org-pm-make-projects)
2. Find which parts of the file are stored in which project, and store the results in org-pm-project-files. (org-pm-make-component-project-list)
3. Save the resulting configurations by writing =org-publish-project-alist= and =org-pm-project-files= to the file whose path is contained in =org-pm-project-data-file-path=

org-pm-parse-buffer can be called explicitly by the user as a command.

If org-pm-auto-parse is enabled, then it is called automatically whenever a buffer is saved.

** org-pm-publish: Select a project to publish from the projects targeted by current buffer. 

Since a file containing org-pm tags can be anywhere outside an org-mode project folder, one cannot use org-publish-current-project to automatically provide the target project based on the file.  Therefore, use =org-pm-publish= instead to select the desired project to publish from a list of projects that are targeted by the current file.

** org-pm-make-projects (called by org-pm-parse-buffer)

** org-pm-make-component-project-list: 

** org-pm-copy-components:

org-pm-copy-components can be called explicitly by the user as a command.

If org-pm-auto-copy is enabled, then it is called automatically whenever a project is published. 

** org-pm-enable-auto: 

** org-pm-disable-auto: 


